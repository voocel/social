// Code generated by entc, DO NOT EDIT.

package group

const (
	// Label holds the string label denoting the group type in the database.
	Label = "group"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldOwner holds the string denoting the owner field in the database.
	FieldOwner = "owner"
	// FieldAvatar holds the string denoting the avatar field in the database.
	FieldAvatar = "avatar"
	// FieldCreatedUID holds the string denoting the created_uid field in the database.
	FieldCreatedUID = "created_uid"
	// FieldMode holds the string denoting the mode field in the database.
	FieldMode = "mode"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldInviteMode holds the string denoting the invite_mode field in the database.
	FieldInviteMode = "invite_mode"
	// FieldNotice holds the string denoting the notice field in the database.
	FieldNotice = "notice"
	// FieldIntroduction holds the string denoting the introduction field in the database.
	FieldIntroduction = "introduction"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// Table holds the table name of the group in the database.
	Table = "groups"
)

// Columns holds all SQL columns for group fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldOwner,
	FieldAvatar,
	FieldCreatedUID,
	FieldMode,
	FieldType,
	FieldStatus,
	FieldInviteMode,
	FieldNotice,
	FieldIntroduction,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultAvatar holds the default value on creation for the "avatar" field.
	DefaultAvatar string
	// DefaultMode holds the default value on creation for the "mode" field.
	DefaultMode int8
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType int8
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int8
	// DefaultInviteMode holds the default value on creation for the "invite_mode" field.
	DefaultInviteMode int8
	// DefaultNotice holds the default value on creation for the "notice" field.
	DefaultNotice string
	// DefaultIntroduction holds the default value on creation for the "introduction" field.
	DefaultIntroduction string
)
